package com.supermatech.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubCategoryAllPropertiesEquals(SubCategory expected, SubCategory actual) {
        assertSubCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertSubCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubCategoryAllUpdatablePropertiesEquals(SubCategory expected, SubCategory actual) {
        assertSubCategoryUpdatableFieldsEquals(expected, actual);
        assertSubCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubCategoryAutoGeneratedPropertiesEquals(SubCategory expected, SubCategory actual) {
        assertThat(expected)
            .as("Verify SubCategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubCategoryUpdatableFieldsEquals(SubCategory expected, SubCategory actual) {
        assertThat(expected)
            .as("Verify SubCategory relevant properties")
            .satisfies(e -> assertThat(e.getCatt_name()).as("check catt_name").isEqualTo(actual.getCatt_name()))
            .satisfies(e -> assertThat(e.getCatt_description()).as("check catt_description").isEqualTo(actual.getCatt_description()))
            .satisfies(e -> assertThat(e.getCat_id()).as("check cat_id").isEqualTo(actual.getCat_id()))
            .satisfies(e -> assertThat(e.getCatt_icon()).as("check catt_icon").isEqualTo(actual.getCatt_icon()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubCategoryUpdatableRelationshipsEquals(SubCategory expected, SubCategory actual) {
        assertThat(expected)
            .as("Verify SubCategory relationships")
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()));
    }
}
